# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker
parameters:
  - name: BASETYPE
    type: string
    default: servercore
    values:
      - servercore
      - nanoserver
  - name: BASEVERSION
    type: string
    default: 1809
  - name: BCCOUNTRY
    type: string
    default: de
  - name: BCSASTOKEN
    type: string
    default: ""
  - name: BCSTORAGEACCOUNT
    type: string
    default: bcartifacts
  - name: BCTYPE
    type: string
    default: onprem
  - name: BCVERSION
    type: string
    default: 16.3
  - name: NCHVERSION
    type: string
    default: 0.7.0.23

trigger:
- master

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '2a75b31a-ab2f-4511-a1f6-f5ffaf1ce240'
  imageRepository: 'compiler-$(BASETYPE)'
  containerRegistry: 'cosmo.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(BCTYPE)-$(BCVERSION)-$(BCCOUNTRY)-$(BASEVERSION)-$(Build.BuildId)'
  
  # Agent VM image name
  vmImageName: 'windows-2019'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build an image
      inputs:
        command: build
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
        arguments: --build-arg BASEVERSION=$(BASEVERSION) --build-arg BASETYPE=$(BASETYPE) --build-arg NCHVERSION=$(NCHVERSION) --build-arg BCTYPE=$(BCTYPE) --build-arg BCVERSION=$(BCVERSION) --build-arg BCCOUNTRY=$(BCCOUNTRY) --build-arg BCSASTOKEN=$(BCSASTOKEN) --build-arg BCSTORAGEACCOUNT=$(BCSTORAGEACCOUNT)
    
    - task: Docker@2
      displayName: Push an image to container registry
      inputs:
        command: push
        repository: $(imageRepository)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
